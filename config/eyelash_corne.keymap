#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

// https://zmk.dev/docs/keymaps/input-processors#input-processors-overview
&mmv_input_listener {
    input-processors = <&zip_xy_scaler 4 1>;
};

&msc_input_listener {
    input-processors = <&zip_xy_scaler 3 1>;
};

&msc {
    x-input-code = <INPUT_REL_HWHEEL>;
    y-input-code = <INPUT_REL_WHEEL>;
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
};

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <3>;
};

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 5000  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 40    // 10

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate-var";
        #sensor-binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&kp LA(F12)   &kp Q  &kp W        &kp E       &kp R       &kp T                        &mmv MOVE_UP                    &kp Y  &kp U       &kp I       &kp O       &kp P     &kp BSPC
&kp LSHIFT      &kp A  &hm LCTRL S  &hm LALT D  &hm LGUI F  &kp G              &mmv MOVE_LEFT &mkp LCLK &mmv MOVE_RIGHT  &kp H  &hm LGUI J  &hm LALT K  &hm LCTRL L &kp SEMI  &mt LSHIFT SQT
&kp LA(F11)   &kp Z  &kp X        &kp C       &kp V       &kp B  &mkp RCLK             &mmv MOVE_DOWN                  &kp N  &kp M       &kp COMMA   &kp DOT     &kp FSLH  &kp ESC
                                                                 &mo 3  &mo 1  &kp SPACE                &kp ENTER  &mo 2  &mo 4
            >;
            sensor-bindings = <&scroll_encoder PG_UP PG_DN>;
        };

        layer_1 {
            display-name = "layer_1";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3    &kp N4      &kp N5                         &msc SCRL_UP                       &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp DEL
&trans  &kp EXCL         &kp AT          &kp HASH  &kp DOLLAR  &kp PERCENT           &msc SCRL_LEFT  &mkp LCLK  &msc SCRL_RIGHT  &kp CARET        &kp AMPS         &kp STAR         &kp LPAR         &kp RPAR  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans    &trans      &rgb_ug RGB_EFF  &mkp RCLK     &msc SCRL_DOWN                     &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                                         &trans        &trans        &trans                     &kp INS          &kp DEL          &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            display-name = "layer_2";
            bindings = <
&kp TAB  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                   &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &kp DEL 
&trans   &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4         &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp BSLH  &kp GRAVE
&trans   &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5  &trans            &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE  &kp TILDE
                                                            &trans     &trans  &kp SPACE               &kp RET    &trans     &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            display-name = "layer_3";
            bindings = <
&studio_unlock   &kp F1      &kp F2      &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans           &trans      &mkp LCLK   &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&bootloader      &sys_reset  &trans      &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &sys_reset       &bootloader
                                &trans      &trans      &trans                                                                   &trans       &trans     &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_4 {
            display-name = "layer_4";
            bindings = <
&studio_unlock   &kp F1      &kp F2      &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON      &rgb_ug RGB_EFF  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &sys_reset       &bootloader 
                                &trans      &trans      &trans                                                                   &trans       &trans     &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
